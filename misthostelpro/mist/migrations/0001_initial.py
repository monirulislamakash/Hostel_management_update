# Generated by Django 3.2.6 on 2021-12-02 05:21

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CastomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('StudentName', models.CharField(default='', max_length=100)),
                ('Hostel', models.CharField(default=1, max_length=13)),
                ('Image', models.ImageField(default='static/profile/avatar.png', upload_to='static/profile/pic/')),
                ('Numer', models.IntegerField(default=880)),
                ('Room_Number', models.CharField(default='00', max_length=10)),
                ('Father_name', models.CharField(default='Need to Enter', max_length=50)),
                ('Father_profession', models.CharField(default='Need to Enter', max_length=100)),
                ('Class_Roll', models.CharField(default='Need to Enter', max_length=50, unique=True)),
                ('Bed_Number', models.CharField(default='00', max_length=10)),
                ('Blood_Group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB-', 'AB-'), ('AB+', 'AB+'), ('O+', 'O+'), ('O-', 'O-')], default='+-', max_length=5)),
                ('Address', models.CharField(default='Need to Enter', max_length=300)),
                ('Parents_number', models.CharField(default='Need to Enter', max_length=15)),
                ('Date_of_Birth', models.CharField(default='Need to Enter', max_length=30)),
                ('Gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='Male', max_length=10)),
                ('Emediate_Gauedion_Numer', models.CharField(default='Need to Enter', max_length=15)),
                ('MealBill', models.CharField(default='000', max_length=10)),
                ('permission', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Afternoon_Meal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(default='', max_length=50)),
                ('Price', models.CharField(default='', max_length=50)),
                ('Available', models.CharField(default='', max_length=10)),
                ('When', models.CharField(default='Lunch', max_length=30, verbose_name='Lunch')),
            ],
        ),
        migrations.CreateModel(
            name='All_Meal_Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(default='', max_length=50)),
                ('Hostel', models.CharField(default=1, max_length=13)),
                ('Food_Name', models.CharField(default='', max_length=50)),
                ('Food_ID', models.CharField(default='', max_length=50)),
                ('Price', models.CharField(default='', max_length=50)),
                ('Quantity', models.CharField(default='', max_length=10)),
                ('Date_Time', models.CharField(default='', max_length=50)),
                ('When', models.CharField(default='breakfast', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Demo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='', max_length=50)),
                ('Roll', models.CharField(default='', max_length=50)),
                ('Hostel', models.CharField(default=1, max_length=13)),
                ('Room_Number', models.CharField(default='', max_length=13)),
                ('Break_qun', models.IntegerField(default=0, max_length=50)),
                ('Break', models.CharField(default='', max_length=50)),
                ('Break_price', models.IntegerField(default=0, max_length=50)),
                ('Lunch_qun', models.IntegerField(default=0, max_length=50)),
                ('Lunch', models.CharField(default='', max_length=50)),
                ('Lunch_price', models.IntegerField(default=0, max_length=50)),
                ('Denar_qun', models.IntegerField(default=0, max_length=50)),
                ('Denar', models.CharField(default='', max_length=50)),
                ('Denar_price', models.IntegerField(default=0, max_length=50)),
                ('Date_Time', models.CharField(default=datetime.date(2021, 12, 2), max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Denar_Meal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(default='', max_length=50)),
                ('Price', models.CharField(default='', max_length=50)),
                ('Available', models.CharField(default='', max_length=10)),
                ('When', models.CharField(default='Dinner', max_length=30, verbose_name='Dinner')),
            ],
        ),
        migrations.CreateModel(
            name='Meal_Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(default='', max_length=50)),
                ('Roll', models.CharField(default='', max_length=50)),
                ('Hostel', models.CharField(default=1, max_length=13)),
                ('Room_Number', models.CharField(default='', max_length=13)),
                ('Food_Name', models.CharField(default='', max_length=50)),
                ('Food_ID', models.CharField(default='', max_length=50)),
                ('Price', models.CharField(default='', max_length=50)),
                ('Quantity', models.CharField(default='', max_length=10)),
                ('Date_Time', models.CharField(default='', max_length=50)),
                ('When', models.CharField(default='Breakfast', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Morning_Meal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(default='', max_length=50)),
                ('Price', models.CharField(default='', max_length=50)),
                ('Available', models.CharField(default='', max_length=10)),
                ('When', models.CharField(default='Breakfast', max_length=30, verbose_name='Breakfast')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User', models.CharField(max_length=100)),
                ('Name', models.CharField(default='', max_length=100)),
                ('Mobile', models.IntegerField(default=880, max_length=50)),
                ('Fixed', models.IntegerField(default=0, max_length=50)),
                ('Food', models.IntegerField(default=0, max_length=50)),
                ('Pledge', models.IntegerField(default=0, max_length=50)),
                ('Development', models.IntegerField(default=0, max_length=50)),
                ('Receiver', models.CharField(default='', max_length=100)),
                ('Amount', models.IntegerField(default=0, max_length=50)),
                ('Date', models.DateField(default=datetime.date(2021, 12, 2))),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('Athor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mist.castomuser')),
                ('Titel', models.CharField(default='', max_length=50)),
                ('Body', models.TextField()),
                ('Date', models.DateField(default=datetime.date(2021, 12, 2))),
            ],
        ),
    ]
